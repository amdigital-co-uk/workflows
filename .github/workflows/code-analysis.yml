name: SonarQube Code Analysis
permissions:
  id-token: write
  contents: read

on:
  workflow_call:
    inputs:
      dotnet-version:
        required: false
        type: string
        default: null
      docker-compose:  
        type: string
      organization:  
        type: string
        default: amdigital-co-uk
      project:  
        type: string
      aws-region:
        type: string
        default: us-east-1
      config-file-s3-root:
        required: false
        type: string
      config-file:
        required: false
        type: string
      copy-config-file-to-projects:
        required: false
        type: string
      build-and-analyze-working-directory:
        required: false
        type: string
        default: .
    secrets:
      PKG_TOKEN:
        required: true
      SONAR_TOKEN:
        required: true
      AWS_ROLE_ARN:
        required: false
  
jobs:
  codeAnalysis:
    name: SonarQube Code Analysis
    runs-on: ubuntu-latest
    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'zulu' 
    
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Install SonarCloud scanner
      run: |
        dotnet tool install --global dotnet-sonarscanner

    - name: Install dotnet coverage 
      run: |
        dotnet tool install --global dotnet-coverage

    - name: Login to GitHub packages
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ inputs.dotnet-version }}
        source-url: https://nuget.pkg.github.com/amdigital-co-uk/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.PKG_TOKEN}}

    # Copy config files from S3
    - name: Configure AWS credentials
      if: ${{ inputs.config-file != ''}}
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        role-duration-seconds: 900
        aws-region: ${{ inputs.aws-region }}

    - name: Copy config file from s3 
      if: ${{ inputs.config-file != '' && inputs.config-file-s3-root != ''}}
      env:
        CONFIG_FILE: ${{ inputs.config-file }}
        CONFIG_FILE_S3_ROOT: ${{ inputs.config-file-s3-root }}
      run: |
        aws s3 cp $CONFIG_FILE_S3_ROOT/$CONFIG_FILE .

    # Copy config files to projects
    - name: Copy config file to projects
      if: ${{ inputs.config-file && inputs.copy-config-file-to-projects != '' }}
      env:
        PROJECTS: ${{ inputs.copy-config-file-to-projects }}
        CONFIG_FILE: ${{ inputs.config-file }}
      run: |
        for project in $PROJECTS
        do
          cp $CONFIG_FILE $project
        done

    - name: Start containers
      if: ${{ inputs.docker-compose != '' }}
      run: docker compose -f ${{ inputs.docker-compose }} up -d

    - name: Build and analyze
      working-directory: ${{ inputs.build-and-analyze-working-directory }}
      run: |
          dotnet-sonarscanner begin /k:"${{ inputs.organization }}_${{ inputs.project }}" /o:"${{ inputs.organization }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"  /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build --no-incremental
          dotnet-coverage collect "dotnet test" -f xml -o "coverage.xml"
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
